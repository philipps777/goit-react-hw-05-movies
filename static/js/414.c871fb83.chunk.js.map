{"version":3,"file":"static/js/414.c871fb83.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAY,mCAAG,WAAMD,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKO,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,oDCjB5B,IAfkB,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaJ,GAAhD,SACGC,KAFID,EADC,KASjB,C,8ICeD,EA5Ba,SAAC,GAAyB,IAAvBK,EAAsB,EAAtBA,gBACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAciB,EAAd,KAYA,OACE,kBAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEFL,EAAgB,CAAEf,MAAAA,GACnB,EAOC,WACE,kBACEqB,KAAK,OACLC,YAAY,aACZC,WAAS,EACTC,MAAOxB,EACPyB,SAXqB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACtCP,EAASO,EACV,KAWG,mBAAQH,KAAK,SAASM,UAAW3B,EAAjC,sBAKL,E,SCID,EA1Be,WACb,OAA4BgB,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAesB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBf,EAArB,KAiBA,OAfAgB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeF,EAAaG,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAiB,mCAAG,8GAEKnC,EAAAA,EAAAA,IAAgBiC,GAFrB,OAEhBG,EAFgB,OAGtBP,EAAUO,GAHY,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAQvBH,GAVyB,CAW1B,GAAE,CAACJ,KAGF,iCACE,SAAC,EAAD,CAAMf,gBAAiBA,IACtBT,EAAOgC,OAAS,IAAK,SAAC,IAAD,CAAWhC,OAAQA,MAG9C,C","sources":["api.js","components/FilmList/FilmList.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6aeaa8beaecf2aa788be79aa448ce67d';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","import { useLocation, Link } from 'react-router-dom';\n\nconst FilmsList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, original_title }) => (\n        <li key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default FilmsList;\n","import { useState } from 'react';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <button type=\"submit\" disabled={!query}>\n        Search\n      </button>\n    </form>\n  );\n};\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'api';\n\nimport Form from '../../components/Form/Form';\nimport FilmsList from '../../components/FilmList/FilmList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmsList movies={movies} />}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","movies","location","useLocation","map","id","original_title","state","from","to","setSearchParams","useState","setQuery","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","useSearchParams","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","movieByQuery","console","log","length"],"sourceRoot":""}